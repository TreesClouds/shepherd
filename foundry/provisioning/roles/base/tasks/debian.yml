---
- block:
    - name: upgrade existing packages
      apt:
        upgrade: 'yes'
        update_cache: yes
    - name: install development packages
      apt:
        name:
          - vim
          - zsh
          - git
          - gcc
          - make
          - wget
          - htop
          - curl
          - zip
          - unzip
          - hub
          - less
          - fortune
          - build-essential
          - xz-utils
    # FIXME: For some reason, this is not uninstalled even though the package
    #        is clearly listed in `apt list`, which causes failures when
    #        installing `docker` and `python`.
    - name: uninstall aufs-dkms
      apt:
        name: aufs-dkms
        state: absent
      ignore_errors: yes
    # The desktop is quite heavyweight, and there are issues with the screen
    # not refreshing, so this is not installed by default.
    - name: install desktop
      apt:
        name:
          - xorg
          - gdm3  # Might not need this
          - budgie-desktop
          - budgie-indicator-applet
      tags:
        - never
        - desktop
    - name: clean packages
      apt:
        autoclean: yes
        autoremove: yes
- block:
    - name: install docker dependencies
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - gnupg2
          - software-properties-common
    - name: add docker gpg key
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present
    - name: add docker repo
      apt_repository:
        repo: deb https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable
        state: present
    - name: install docker
      ignore_errors: yes
      apt:
        update_cache: yes
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
    - name: add user to docker group
      user:
        name: "{{ ansible_env.USER }}"
        groups:
          - docker
  tags:
    - docker
- name: install python (latest)
  become: yes
  block:
    - name: install dev packages (headers)
      apt:
        name:
          - zlib1g-dev
          - libncurses5-dev
          - libgdbm-dev
          - libnss3-dev
          - libssl-dev
          - libreadline-dev
          - libffi-dev
    - name: download source
      unarchive:
        src: https://www.python.org/ftp/python/3.8.2/Python-3.8.2.tar.xz
        dest: /tmp
        remote_src: yes
    - name: build from source
      shell: |
        cd /tmp/Python-3.8.2
        ./configure --enable-optimizations
        make -j 4
        make test
        make altinstall
  # FIXME: Make python installable without latest build.
  # tags:
  #   - never
  #   - python-latest
- name: install python
  ignore_errors: yes
  apt:
    name:
      - python3
      - python3-pip
      - python3-dev
  tags:
    - python
- name: install pipenv
  pip:
    name: pipenv
    extra_args: --user --trusted-host pypi.org --trusted-host files.pythonhosted.org
  tags:
    - python
- block:
    - name: install node
      apt:
        name:
          - nodejs
          - npm
    - name: download nvm install script
      get_url:
        url: https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh
        dest: "{{ install_script_path }}"
    - name: install nvm
      command: "bash {{ install_script_path }}"
      args:
        creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"
    - name: delete nvm install script
      file:
        state: absent
        path: "{{ install_script_path }}"
  vars:
    install_script_path: /tmp/nvm-install.sh
  tags:
    - never
    - node
- name: install ruby
  apt:
    name:
      - ruby
      - ruby-dev
  tags:
    - never
    - ruby
- block:
    - name: copy quotes file
      copy:
        src: pie-fortunes
        dest: "{{ fortune_path }}/pie-fortunes"
    - name: compile quotes file
      command: strfile -c % "{{ fortune_path }}/pie-fortunes" "{{ fortune_path }}/pie-fortunes.dat"
  vars:
    fortune_path: /usr/share/games/fortunes
- block:
    - name: disable static motd
      copy:
        content: ''
        dest: /etc/motd
    - name: install motd
      template:
        src: 20-logo.j2
        dest: /etc/update-motd.d/20-logo
        mode: '0755'
        backup: yes
  tags:
    - motd
